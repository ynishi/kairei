name: Task Organization Analysis

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - 'kairei-core/src/**'
      - 'kairei-core/tests/**'
      - 'kairei-http/src/**'
      - 'kairei-http/tests/**'

jobs:
  analyze-changes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Analyze changes
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            
            // Get the PR details
            const pr = await github.rest.pulls.get({
              owner,
              repo,
              pull_number: context.issue.number
            });
            
            // Get changed files
            const files = await github.rest.pulls.listFiles({
              owner,
              repo,
              pull_number: context.issue.number
            });
            
            // Define component patterns
            const components = {
              'tokenizer': /kairei-core\/src\/tokenizer/,
              'parser': /kairei-core\/src\/parser/,
              'type_checker': /kairei-core\/src\/type_checker/,
              'runtime': /kairei-core\/src\/runtime/,
              'system': /kairei-core\/src\/system/,
              'http': /kairei-http\/src/
            };
            
            // Analyze which components are affected
            const affectedComponents = new Set();
            for (const file of files.data) {
              for (const [component, pattern] of Object.entries(components)) {
                if (pattern.test(file.filename)) {
                  affectedComponents.add(component);
                }
              }
            }
            
            // If multiple core components are affected, suggest splitting
            if (affectedComponents.size > 1) {
              const componentsList = Array.from(affectedComponents).join(', ');
              
              // Create knowledge base entry
              const knowledgeEntry = {
                title: `Multiple Component Changes: ${componentsList}`,
                description: `
# Scope Expansion Detection

## Affected Components
${Array.from(affectedComponents).map(c => `- ${c}`).join('\n')}

## Analysis
- Implementation scope may have expanded beyond initial expectations
- Multiple core components are affected

## Recommended Actions
1. Consider task splitting
2. Create independent PRs per component
3. Document dependencies

## Impact Areas
${Array.from(affectedComponents).map(c => `### ${c}\n- Change summary\n- Component dependencies`).join('\n\n')}
                `,
                tags: ['scope-expansion', 'multiple-components', ...Array.from(affectedComponents)]
              };
              
              // Add comment to PR
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: context.issue.number,
                body: `# 🔄 Task Scope Expansion Detection

Multiple core components are affected:
${Array.from(affectedComponents).map(c => `- ${c}`).join('\n')}

## Proposal 📝
Would you like to split these related tasks?

### Suggested Split
${Array.from(affectedComponents).map(c => `1. Changes to ${c}`).join('\n')}

### Benefits
- Easier to review
- Clear impact scope per change
- More efficient testing

This analysis has been recorded in the knowledge base.`
              });
              
              // Add label to PR
              await github.rest.issues.addLabels({
                owner,
                repo,
                issue_number: context.issue.number,
                labels: ['scope-expanded']
              });
            }

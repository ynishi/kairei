name: KAIREI CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"

jobs:
  check:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          
      - name: Check formatting (workspace)
        run: cargo fmt --all -- --check
          
      - name: Clippy (workspace)
        run: cargo clippy --workspace -- -D warnings

  test:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate: [kairei-core, kairei-http]
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          
      - name: Run tests for ${{ matrix.crate }}
        run: cd ${{ matrix.crate }} && cargo test --all-features

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: rust-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            rust-${{ runner.os }}-cargo-

      - name: Install cargo-audit
        run: cargo install cargo-audit --force

      - name: Install dependencies
        run: cargo build --workspace --release

      - name: Run cargo-audit
        run: cargo audit

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate: [kairei-core, kairei-http]
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
          
      - name: Check documentation for ${{ matrix.crate }}
        env:
          RUSTDOCFLAGS: "-D warnings"
        run: cd ${{ matrix.crate }} && cargo doc --no-deps --document-private-items

name: Scope Expansion Detection

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - 'kairei-core/src/**'
      - 'kairei-core/tests/**'
      - 'kairei-http/src/**'
      - 'kairei-http/tests/**'

jobs:
  detect-scope-expansion:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Analyze scope expansion
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            
            // Get PR and issue details
            const pr = await github.rest.pulls.get({
              owner,
              repo,
              pull_number: context.issue.number
            });
            
            // Check for docs/design reference in PR
            const hasDesignDocRef = pr.data.body.toLowerCase().includes('docs/design');
            if (!hasDesignDocRef) {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: context.issue.number,
                body: `# ‚ö†Ô∏è Design Document Reference Check

No reference to docs/design (Single Source of Truth) found.
Please review design documentation before implementation.

## Actions
1. Review relevant docs/design documents
2. Add design document references to PR description
3. Verify consistency with design`
              });
              return;
            }
            
            // Extract issue number from PR body if it references one
            const issueMatch = pr.data.body.match(/#(\d+)/);
            if (!issueMatch) return;
            
            const issueNumber = issueMatch[1];
            const issue = await github.rest.issues.get({
              owner,
              repo,
              issue_number: parseInt(issueNumber)
            });
            
            // Get changed files
            const files = await github.rest.pulls.listFiles({
              owner,
              repo,
              pull_number: context.issue.number
            });
            
            // Analyze complexity indicators
            const indicators = {
              fileCount: files.data.length,
              totalChanges: files.data.reduce((acc, file) => acc + file.changes, 0),
              componentsAffected: new Set(
                files.data
                  .map(f => {
                    const parts = f.filename.split('/');
                    if (parts[0] === 'kairei-core' && parts.length > 2) {
                      return parts[2]; // Return the component name for kairei-core
                    } else if (parts[0] === 'kairei-http') {
                      return 'http'; // Return 'http' for kairei-http
                    }
                    return null;
                  })
                  .filter(c => c && ['tokenizer', 'parser', 'type_checker', 'runtime', 'system', 'http'].includes(c))
              ).size
            };
            
            // Define thresholds for scope expansion
            const thresholds = {
              fileCount: 5,
              totalChanges: 200,
              componentsAffected: 2
            };
            
            // Check if scope has expanded
            const hasExpanded = 
              indicators.fileCount > thresholds.fileCount ||
              indicators.totalChanges > thresholds.totalChanges ||
              indicators.componentsAffected > thresholds.componentsAffected;
            
            if (hasExpanded) {
              // Create knowledge base entry
              const knowledgeEntry = {
                title: `Scope Expansion Detected: Issue #${issueNumber}`,
                description: `
# Scope Expansion Analysis

## Original Issue
${issue.data.title}

## Expansion Metrics
- Changed Files: ${indicators.fileCount} (threshold: ${thresholds.fileCount})
- Total Changes: ${indicators.totalChanges} (threshold: ${thresholds.totalChanges})
- Affected Components: ${indicators.componentsAffected} (threshold: ${thresholds.componentsAffected})

## Analysis
- Implementation scope has expanded beyond original issue
- Multiple components are affected
- Change volume exceeds expectations

## Recommended Actions
1. Review current changes
2. Consider task splitting
3. Create additional issues if needed

## Impact Areas
${files.data.map(f => `- ${f.filename}: ${f.changes} lines changed`).join('\n')}
                `,
                tags: ['scope-expansion', 'complexity-increase', `issue-${issueNumber}`]
              };
              
              // Add comment to PR
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: context.issue.number,
                body: `# üîç Scope Expansion Detection

Implementation scope may have expanded beyond Issue #${issueNumber}.

## Analysis Results
- Changed Files: ${indicators.fileCount} files
- Total Changes: ${indicators.totalChanges} lines
- Affected Components: ${indicators.componentsAffected}

## Recommendations
1. Pause current changes
2. Consider:
   - Splitting tasks
   - Creating additional issues
   - Reviewing implementation scope

This analysis has been recorded in the knowledge base.`
              });
              
              // Add label to PR
              await github.rest.issues.addLabels({
                owner,
                repo,
                issue_number: context.issue.number,
                labels: ['scope-expanded']
              });
            }
